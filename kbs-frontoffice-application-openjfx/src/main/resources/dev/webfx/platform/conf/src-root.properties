# File managed by WebFX (DO NOT EDIT MANUALLY)

# From kbs-frontoffice-application
HTTP_SERVER_ORIGIN = ${{ FRONTOFFICE_ORIGIN }}
FRONTOFFICE_ORIGIN = https://app.staging.kadampabookings.org
modality.base.frontoffice.application.startPath = /news
modality.base.frontoffice.application.buttonRoutingOperations = RouteToHome,RouteToNews,RouteToPodcasts,RouteToBooks,RouteToBooking,RouteToAudioRecordings,RouteToVideos,RouteToAccount,RouteToConsole
modality.event.frontoffice.activity.booking.headerImageUrl = org/kadampabookings/frontoffice/booking/booking-header-image.jpeg

# From kbs-frontoffice-activity-news-plugin
kbs.frontoffice.activity.news.headerImageUrl = https://kadampa.org/cdn-cgi/image//wp-content/uploads/2022/05/VGL.jpg

# From modality-event-frontoffice-activity-booking-plugin
modality.event.frontoffice.activity.bookevent.headerImageUrl = https://kadampa.org/wp-content/uploads/2023/02/Header-homepage-new-kadampa-tradition.jpg
#modality.event.frontoffice.activity.booking.headerImageUrl = https://kadampafestivals.org/wp-content/uploads/2022/08/Puja_0028.jpg
modality.event.frontoffice.activity.booking.googleMapJsApiKey = ${{ GOOGLE_MAP_JS_API_KEY }}

# From modality-base-frontoffice-application
#modality.base.frontoffice.application.startPath = /booking
#modality.base.frontoffice.application.buttonRoutingOperations = RouteToBooking,RouteToAlerts,RouteToAccount
modality.base.client.conf.frontoffice = true

# From modality-base-client-operationactionsloading-plugin
modality.base.client.operationactionsloading.hideUnauthorizedRouteOperationActions = false
modality.base.client.operationactionsloading.hideUnauthorizedOtherOperationActions = true

# From modality-crm-client-profile-plugin
modality.base.backoffice.mainframe.headernode.headerNodes = eventSelector

# From modality-base-backoffice-mainframe-headernode
#modality.base.backoffice.mainframe.headernode.headerNodes = organizationSelector,eventSelector

# From webfx-stack-com-bus-json-client-websocket
webfx.stack.com.client.websocket.busPrefix = ${{ BUS_PREFIX | 'eventbus' }}
webfx.stack.com.client.websocket.pingInterval = ${{ BUS_PING_INTERVAL | 5000 }}
webfx.stack.com.client.websocket.serverSSL = ${{ BUS_SERVER_SSL | WINDOW_LOCATION_SSL | false }}
webfx.stack.com.client.websocket.protocol = ${{ BUS_SERVER_PROTOCOL | WINDOW_LOCATION_PROTOCOL | 'WS' }}
webfx.stack.com.client.websocket.serverPort = ${{ BUS_SERVER_PORT | WINDOW_LOCATION_PORT | 80 }}
webfx.stack.com.client.websocket.serverHost = ${{ BUS_SERVER_HOST | WINDOW_LOCATION_HOSTNAME | 'localhost' }}

# From webfx-stack-cloud-image
webfx.stack.cloud.image.rest.imageRestPrefix = /rest/images
webfx.stack.cloud.image.rest.existsPath = ${{ imageRestPrefix }}/exists
webfx.stack.cloud.image.rest.existsUrl = ${{ imageRestOrigin }}${{ existsPath }}
webfx.stack.cloud.image.rest.uploadUrl = ${{ imageRestOrigin }}${{ uploadPath }}
webfx.stack.cloud.image.rest.uploadPath = ${{ imageRestPrefix }}/upload
webfx.stack.cloud.image.rest.urlPatternUrl = ${{ imageRestOrigin }}${{ urlPatternPath }}
webfx.stack.cloud.image.rest.imageRestOrigin = ${{ HTTP_SERVER_ORIGIN | WINDOW_LOCATION_ORIGIN }}
webfx.stack.cloud.image.rest.urlPatternPath = ${{ imageRestPrefix }}/url-pattern
webfx.stack.cloud.image.rest.deleteUrl = ${{ imageRestOrigin }}${{ deletePath }}
webfx.stack.cloud.image.rest.deletePath = ${{ imageRestPrefix }}/delete
